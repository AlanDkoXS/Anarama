---
import { getLangFromUrl, useTranslations, getAlternateLanguageUrl } from '@/i18n/utils';

const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);
const alternateUrl = getAlternateLanguageUrl(Astro.url);
const alternateLang = currentLang === 'en' ? 'es' : 'en';
const alternateLangName = alternateLang === 'en' ? 'English' : 'Espa√±ol';
---

<div class="language-toggle">
  <button
    type="button"
    class="language-button"
    aria-label={t('lang.switch')}
    data-current-lang={currentLang}
    data-alternate-url={alternateUrl}
    data-alternate-lang={alternateLang}
  >
    <span class="language-icon" aria-hidden="true">üåê</span>
    <span class="language-text">{alternateLangName}</span>
  </button>
</div>

<script>
  function initLanguageToggle(): void {
    const buttons = document.querySelectorAll('.language-button');
    
    buttons.forEach((button) => {
      if (!(button instanceof HTMLButtonElement)) return;
      
      button.addEventListener('click', () => {
        const alternateUrl = button.dataset['alternateUrl'];
        const alternateLang = button.dataset['alternateLang'];
        
        if (alternateUrl && alternateLang) {
          // Store language preference
          localStorage.setItem('preferred-language', alternateLang);
          
          // Navigate to alternate language version
          window.location.href = alternateUrl;
        }
      });
    });
  }

  // Initialize on DOM load
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initLanguageToggle);
  } else {
    initLanguageToggle();
  }

  // Re-initialize after view transitions
  document.addEventListener('astro:after-swap', initLanguageToggle);
</script>

<style>
  .language-toggle {
    display: flex;
    align-items: center;
  }

  .language-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    background: transparent;
    border: 1px solid var(--color-primary);
    border-radius: 0.375rem;
    color: var(--text-primary);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .language-button:hover {
    background: var(--color-primary);
    color: white;
  }

  .language-button:focus {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
  }

  .language-icon {
    font-size: 1rem;
  }

  .language-text {
    font-size: 0.875rem;
  }

  @media (max-width: 768px) {
    .language-text {
      display: none;
    }
    
    .language-button {
      padding: 0.5rem;
    }
  }
</style>